apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: init-db
        image: postgres:15
        command:
          [
            "sh",
            "-c",
            "until pg_isready -h postgres-service -p 5432; do echo waiting for db; sleep 2; done; psql -h postgres-service -U postgres -d postgres -c \"CREATE TABLE IF NOT EXISTS users (id SERIAL PRIMARY KEY, username TEXT);\""
          ]
        env:
          - name: PGPASSWORD
            value: "password"

      containers:
      - name: backend
        image: backend:latest
        imagePullPolicy: Never
        ports:
          - containerPort: 5000
        env:
          - name: POSTGRES_HOST
            value: "postgres-service"
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "password"
          - name: REDIS_HOST
            value: "redis-service"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 5000       # The port exposed inside the cluster
      targetPort: 5000 # The port your container listens on
  type: NodePort       # Kubernetes will assign a random NodePort automatically
